# 为程序创建服务账号
apiVersion: v1
kind: ServiceAccount
metadata:
  name: myapp-service-account # 服务账号名字
  namespace: default  # 替换为你应用运行的命名空间

---
# 创建角色
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: myapp-node-reader
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
---
# 绑定角色
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: myapp-node-reader-binding
  namespace: your-namespace
subjects:
  - kind: ServiceAccount
    name: myapp-service-account  # 使用之前创建的服务账号名称
    namespace: default
roleRef:
  kind: Role
  name: myapp-node-reader  # 引用之前创建的Role
  apiGroup: rbac.authorization.k8s.io

# 使用kubectl apply -f role.yaml命令应用这些配置。
# pod 的spec 要包含
#spec:
#  serviceAccountName: myapp-service-account
#  ...